####### talks.nicklamuro.com/vim_tmux
bind-key a send-key C-a
bind-key -r < swap-window -t :-
bind-key -r > swap-window -t :+
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

###### http://unix.stackexchange.com/questions/14300/moving-tmux-window-to-pane
bind-key @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# clock
set-window-option -g clock-mode-colour green #green

# Mouse support
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.1" | bc) -eq 1 ]' \
    'set -g mouse on; set -g mouse-utf8 on' \
    'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'

set-option -g -q mouse on

# VI mode visual yank
bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'y' copy-pipe "xsel -pbi"
bind-key -t vi-copy Enter copy-pipe "xsel -pbi"
bind-key M-c run "tmux show-buffer | xsel -pbi"

# Don't lose track of SSH_AGENT etc. from parent environment.
set -g update-environment -r

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1

# Bigger history
set -g history-limit 10000

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Move windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1


# Move between panes
bind-key Up select-pane -U
bind-key Down select-pane -D
bind-key Left select-pane -L
bind-key Right select-pane -R

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Enable status bar (default is "on")
set-option -g status on

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green

set -g status-interval 1
set -g status-justify left # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'


# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on


